---

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"


stages:
  - check
  - test
  - build


before_script:
  - python -V
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate
  - pip install -U -r requirements.txt
  - flake8 --version
  - pylint --version
  - black --version
  - echo isort $(isort --version-number)


check:
  stage: check
  image: python:3.9.6-slim
  script:
    - isort --check --diff *.py lib/*.py tests/*.py
    - black --check *.py lib/*.py tests/*.py
    - flake8 *.py lib/*.py tests/*.py
    - pylint *.py lib/*.py tests/*.py
  cache:
    key: build-cache
    paths:
        - .cache/pip
        - venv/

test:
  stage: test
  image: python:3.9.6-slim
  script:
    - pytest -v --cov=lib --cov-report term-missing tests/
    - cat data/easy.txt
    - python solve_sudoku.py data/easy.txt
    - python solve_sudoku.py data/easy.json
    - python solve_sudoku.py -v data/easy.txt
    - python solve_sudoku.py -h
    - python solve_sudoku.py --version
  cache:
    key: build-cache
    paths:
      - .cache/pip
      - venv/

build:
    image: docker:latest
    stage: build
    services:
        - docker:dind
    before_script:
        - echo $CI_BUILD_TOKEN | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
    script:
        - docker build --pull -t "$CI_REGISTRY_IMAGE" .
        - docker push "$CI_REGISTRY_IMAGE"
